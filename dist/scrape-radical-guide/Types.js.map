{"version":3,"file":"Types.js","sourceRoot":"","sources":["../../src/scrape-radical-guide/Types.ts"],"names":[],"mappings":"","sourcesContent":["export type SupportedSchema = RadicalSupergroup | RadicalGroup | Radical | StrokeCountGrouping | Character;\n\nexport type Guid<Name extends string> = {\n  type: Name;\n  uuid: string;\n};\n\nexport type Schema<Name extends SchemaName> = {\n  guid: Guid<Name>;\n};\n\nexport type SchemaName = 'radical-supergroup' | 'radical-group' | 'radical' | 'stroke-count-grouping' | 'character';\n\n// List of schemas allowed for our scraped data\nexport interface RadicalSupergroup extends Schema<'radical-supergroup'> {\n  name: string;\n  index: number;\n  subgroups: Guid<'radical-group'>[];\n}\n\nexport interface RadicalGroup extends Schema<'radical-group'> {\n  index: number;\n  radicals: Guid<'radical'>[];\n}\n\nexport interface Radical extends Schema<'radical'> {\n  radical: string;\n  strokeCountGrouping: Guid<'stroke-count-grouping'>;\n}\n\nexport interface StrokeCountGrouping extends Schema<'stroke-count-grouping'> {\n  label: string | undefined;\n  sublabel: string;\n  characters: Guid<'character'>[];\n}\n\nexport interface Character {\n  characterMojikyo: string;\n  characterFont: string;\n  // characterUnicode: string;\n  romanization: string;\n  decimalIndex: string;\n  romanIndex: string;\n  characterId: string;\n}\n\n// Enforces that each value has the right guid\ntype PlausibleSchemaContext = {\n  [Name in SchemaName]: Schema<Name>[];\n};\n\nexport interface SchemaContext extends PlausibleSchemaContext {\n  'radical-supergroup': RadicalSupergroup[];\n  'radical-group': RadicalGroup[];\n  'radical': Radical[];\n  'stroke-count-grouping': StrokeCountGrouping[];\n  // 'character': Character[];\n}\n"]}